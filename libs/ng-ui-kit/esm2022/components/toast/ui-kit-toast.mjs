import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./services/toast.service";
import * as i2 from "@ng-icons/core";
export class UiKitToast {
    toastService;
    icon = 'faSolidXmark';
    defaultDuration = 5000;
    constructor(toastService) {
        this.toastService = toastService;
        this.toastService.defaultDuration = +this.defaultDuration;
    }
    close() {
        this.toastService.removeToast();
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: UiKitToast, deps: [{ token: i1.ToastService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: UiKitToast, selector: "ui-kit-toast", inputs: { icon: "icon", defaultDuration: "defaultDuration" }, ngImport: i0, template: "@if (toastService.toast$()) {\n  <div class=\"toast\" [class]=\"toastService.toast$()?.type\">\n    <div class=\"close\">\n      <ng-icon [name]=\"icon\" (click)=\"close()\" />\n    </div>\n\n    <h2 class=\"title\">{{ toastService.toast$()?.title }}</h2>\n    <p class=\"message\">{{ toastService.toast$()?.message }}</p>\n  </div>\n}\n\n", styles: [".toast{color:var(--toast-text-color);position:fixed;top:5px;right:5px;padding:5px 10px;border-radius:10px;width:250px;display:flex;flex-direction:column;gap:10px}.toast .close{display:flex;flex-direction:row;justify-content:flex-end}.toast .title{margin:0;text-align:center;font-weight:400;font-size:16px}.toast .message{margin:0;text-align:left;text-wrap:normal;font-size:14px}.error{background:var(--toast-danger-bg-color)}.success{background:var(--toast-success-bg-color)}.warning{background:var(--toast-warning-bg-color)}\n"], dependencies: [{ kind: "component", type: i2.NgIcon, selector: "ng-icon", inputs: ["name", "svg", "size", "strokeWidth", "color"] }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: UiKitToast, decorators: [{
            type: Component,
            args: [{ selector: 'ui-kit-toast', template: "@if (toastService.toast$()) {\n  <div class=\"toast\" [class]=\"toastService.toast$()?.type\">\n    <div class=\"close\">\n      <ng-icon [name]=\"icon\" (click)=\"close()\" />\n    </div>\n\n    <h2 class=\"title\">{{ toastService.toast$()?.title }}</h2>\n    <p class=\"message\">{{ toastService.toast$()?.message }}</p>\n  </div>\n}\n\n", styles: [".toast{color:var(--toast-text-color);position:fixed;top:5px;right:5px;padding:5px 10px;border-radius:10px;width:250px;display:flex;flex-direction:column;gap:10px}.toast .close{display:flex;flex-direction:row;justify-content:flex-end}.toast .title{margin:0;text-align:center;font-weight:400;font-size:16px}.toast .message{margin:0;text-align:left;text-wrap:normal;font-size:14px}.error{background:var(--toast-danger-bg-color)}.success{background:var(--toast-success-bg-color)}.warning{background:var(--toast-warning-bg-color)}\n"] }]
        }], ctorParameters: () => [{ type: i1.ToastService }], propDecorators: { icon: [{
                type: Input
            }], defaultDuration: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWkta2l0LXRvYXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctdWkta2l0L3NyYy9jb21wb25lbnRzL3RvYXN0L3VpLWtpdC10b2FzdC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLXVpLWtpdC9zcmMvY29tcG9uZW50cy90b2FzdC91aS1raXQtdG9hc3QuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQzs7OztBQVEvQyxNQUFNLE9BQU8sVUFBVTtJQUdGO0lBRlYsSUFBSSxHQUFXLGNBQWMsQ0FBQztJQUM5QixlQUFlLEdBQW9CLElBQUksQ0FBQztJQUNqRCxZQUFtQixZQUEwQjtRQUExQixpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUMzQyxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUM7SUFDNUQsQ0FBQztJQUVNLEtBQUs7UUFDVixJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ2xDLENBQUM7d0dBVFUsVUFBVTs0RkFBVixVQUFVLGtIQ1J2QixxVkFXQTs7NEZESGEsVUFBVTtrQkFMdEIsU0FBUzsrQkFDRSxjQUFjO2lGQUtmLElBQUk7c0JBQVosS0FBSztnQkFDRyxlQUFlO3NCQUF2QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VG9hc3RTZXJ2aWNlfSBmcm9tICcuL3NlcnZpY2VzL3RvYXN0LnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd1aS1raXQtdG9hc3QnLFxuICB0ZW1wbGF0ZVVybDogJy4vdWkta2l0LXRvYXN0Lmh0bWwnLFxuICBzdHlsZVVybDogJy4vdWkta2l0LXRvYXN0LnNjc3MnXG59KVxuZXhwb3J0IGNsYXNzIFVpS2l0VG9hc3Qge1xuICBASW5wdXQoKSBpY29uOiBzdHJpbmcgPSAnZmFTb2xpZFhtYXJrJztcbiAgQElucHV0KCkgZGVmYXVsdER1cmF0aW9uOiBudW1iZXIgfCBzdHJpbmcgPSA1MDAwO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgdG9hc3RTZXJ2aWNlOiBUb2FzdFNlcnZpY2UpIHtcbiAgICB0aGlzLnRvYXN0U2VydmljZS5kZWZhdWx0RHVyYXRpb24gPSArdGhpcy5kZWZhdWx0RHVyYXRpb247XG4gIH1cblxuICBwdWJsaWMgY2xvc2UoKTogdm9pZCB7XG4gICAgdGhpcy50b2FzdFNlcnZpY2UucmVtb3ZlVG9hc3QoKTtcbiAgfVxufVxuIiwiQGlmICh0b2FzdFNlcnZpY2UudG9hc3QkKCkpIHtcbiAgPGRpdiBjbGFzcz1cInRvYXN0XCIgW2NsYXNzXT1cInRvYXN0U2VydmljZS50b2FzdCQoKT8udHlwZVwiPlxuICAgIDxkaXYgY2xhc3M9XCJjbG9zZVwiPlxuICAgICAgPG5nLWljb24gW25hbWVdPVwiaWNvblwiIChjbGljayk9XCJjbG9zZSgpXCIgLz5cbiAgICA8L2Rpdj5cblxuICAgIDxoMiBjbGFzcz1cInRpdGxlXCI+e3sgdG9hc3RTZXJ2aWNlLnRvYXN0JCgpPy50aXRsZSB9fTwvaDI+XG4gICAgPHAgY2xhc3M9XCJtZXNzYWdlXCI+e3sgdG9hc3RTZXJ2aWNlLnRvYXN0JCgpPy5tZXNzYWdlIH19PC9wPlxuICA8L2Rpdj5cbn1cblxuIl19